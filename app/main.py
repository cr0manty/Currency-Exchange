import telebot
from app.config import token
from emoji import emojize
from app.func import *
from telebot import types

bot = telebot.TeleBot(token)


@bot.message_handler(commands=['start'])
def update_course(message):
    bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫, ' + message.from_user.first_name +
                     '! –Ø –±–æ—Ç –∫–æ—Ç–æ—Ä—ã–π –∫–æ–Ω–≤–µ—Ä–∏—Ä—É–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—É—é —Å—É–º–º—É –∏–∑ –æ–¥–Ω–æ–π –≤–∞–ª—é—Ç—ã –≤ –¥—Ä—É–≥—É—é.' +
                     "–§–æ—Ä–º–∞—Ç –≤–≤–æ–¥–∞: '—á–∏—Å–ª–æ' '–≤–∞–ª—é—Ç–∞ –∏–∑' '–≤–∞–ª—é—Ç–∞ –≤'" + emojize(':eyes:'))


@bot.inline_handler(func=lambda query: len(query.query) > 8)
def query_text(query):
    try:
        parse_text(query.query)
    except AttributeError as e:
        return
    text = query.query.upper().split()
    try:
        if text[1] in keys_first and text[2] in keys_first and to_digit(text[0]):
            text.append(get_course(text))
            result = types.InlineQueryResultArticle(
                id='0', title="–ö–æ–Ω–≤–µ—Ä—Ç–æ—Ä",
                description=format_course(text),
                input_message_content=types.InputTextMessageContent(
                    message_text=format_course(text)))
        else:
            result = types.InlineQueryResultArticle(
                id='0', title="–ù–µ —Ñ–æ—Ä–º–∞—Ç", description="–§–æ—Ä–º–∞—Ç: '—á–∏—Å–ª–æ' '–≤–∞–ª—é—Ç–∞ –∏–∑' '–≤–∞–ª—é—Ç–∞ –≤'",
                input_message_content=types.InputTextMessageContent(
                    message_text=''))
        bot.answer_inline_query(query.id, [result])

    except Exception as e:
        return


@bot.inline_handler(func=lambda query: len(query.query) < 8)
def empty_query(query):
    hint = "–í–≤–µ–¥–∏—Ç–µ —Ä–æ–≤–Ω–æ 2 —á–∏—Å–ª–∞ –∏ –ø–æ–ª—É—á–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç!"
    try:
        r = types.InlineQueryResultArticle(
            id='1',
            title='–û–∂–∏–¥–∞–µ—Ç—Å—è —Ñ–æ—Ä–º–∞—Ç',
            description="–§–æ—Ä–º–∞—Ç: '—á–∏—Å–ª–æ' '–≤–∞–ª—é—Ç–∞ –∏–∑' '–≤–∞–ª—é—Ç–∞ –≤'",
            input_message_content=types.InputTextMessageContent(
                message_text=query.query)
        )
        bot.answer_inline_query(query.id, [r])
    except Exception as e:
        print(e)


@bot.message_handler(commands=['know'])
def known_course(message):
    known = ''
    for i in keys_first:
        known += i + ' '
    bot.send_message(message.chat.id, known)


@bot.message_handler(commands=['add'])
def add_course(message):
    new_course = message.text.upper().split()[1]
    if len(new_course) != 3:
        bot.send_message(message.chat.id, '–û—à–∏–±–æ—á–∫–∞! –¢–∞–∫–æ–π –∫—É—Ä—Å –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω!\
                                          –î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –∫—É—Ä—Å–∞ —Ç—Ä–µ–±—É–µ—Ç—Å—è –≤–≤–µ—Å—Ç–∏ –µ–≥–æ –∞–±–±—Ä–µ–≤–∏–∞—Ç—É—Ä—É!\n\
                                          –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è: \'/add uah\'')
    elif new_course in keys_first:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π –∫—É—Ä—Å —É–∂–µ —É –º–µ–Ω—è –µ—Å—Ç—å!‚ò∫')
    else:
        course = check_course(message.text)
        #TODO –∏—Å–ø—Ä–∞–≤–∏—Ç—å
        if course:
            keys_first.append(new_course)
            write_to_file(new_course)
        else:
            bot.send_message(message.chat.id, '–û—Ö! –Ø –Ω–µ –º–æ–≥—É –Ω–∞–π—Ç–∏ —Ç–∞–∫—É—é –≤–∞–ª—é—Ç—É üò∞')



@bot.message_handler(content_types=['text'])
def send_text(message):
    if parse_text(message.text):
        text = message.text.upper().split()
        if text[1] in keys_first and text[2] in keys_first and to_digit(text[0]):
            text.append(get_course(text))
            bot.send_message(message.chat.id, format_course(text))
        else:
            bot.send_message(message.chat.id, '–í—ã—Ä–∞–∂–µ–Ω–∏–µ –≤–≤–µ–¥–µ–Ω–æ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ '
                             + emojize(':anxious_face_with_sweat:'))

    elif '–ø—Ä–∏–≤–µ—Ç' in message.text.lower():
        bot.send_message(message.chat.id, '–ü—Ä–∏–≤–µ—Ç–∏–∫, ' + message.from_user.first_name + emojize(
            ':winking_face:'))

    elif '–ø–æ–∫–∞' in message.text.lower():
        bot.send_message(message.chat.id, '–ü—Ä–æ—â–∞–π' + emojize(':anxious_face_with_sweat:'))
    else:
        bot.send_message(message.chat.id, '–ò–∑–≤–∏–Ω–∏, —è –Ω–µ –ø–æ–Ω–∏–º–∞—é —á—Ç–æ —Ç—ã —Å–∫–∞–∑–∞–ª'
                         + emojize(':grinning_face_with_sweat:'))


if __name__ == '__main__':
    read_from_file()
    bot.polling()
